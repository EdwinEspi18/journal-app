{"version":3,"sources":["firebase/config.js","types/types.js","actions/ui.js","actions/auth.js","components/JournalEntry.jsx","components/JournalEntries.jsx","components/SideBar.jsx","components/NotesAppBar.jsx","components/NoteScreen.jsx","components/JournalScreen.jsx","components/PrivateRoute.jsx","components/PublicRoute.jsx","hooks/useForm.js","components/auth/LoginScreen.jsx","components/auth/RegisterScreen.jsx","routers/AuthRouter.jsx","routers/AppRouter.jsx","reducers/register.reducer.js","store/store.js","reducers/auth.reducer.js","JournalApp.jsx","index.js"],"names":["googleAuthProvider","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","GoogleAuthProvider","types","setError","msg","type","payload","finishLoading","startLoginEmailPassword","email","password","dispatch","auth","getAuth","signInWithEmailAndPassword","then","user","login","uid","displayName","catch","err","console","log","Swal","fire","message","logout","JournalEntry","className","style","backgroundSize","backgroundImage","JournalEntries","map","entry","SideBar","useDispatch","onClick","a","signOut","NotesAppBar","NoteScreen","placeholder","autoComplete","src","alt","JournalScreen","PrivateRoute","isAuth","Component","component","rest","props","to","PublicRoute","useForm","initialState","useState","values","setValues","reset","handleChange","target","name","value","LoginScreen","loading","useSelector","state","ui","code","onSubmit","event","preventDefault","onChange","disabled","signInWithPopup","RegisterScreen","msgError","password2","isFormValue","trim","length","validator","isEmail","e","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","AppRouter","checking","setChecking","isLoggedIn","setIsLogggedIn","useEffect","onAuthStateChanged","basename","composeEnhancers","window","composeWithDevTools","compose","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.61092496.chunk.js","sourcesContent":["import 'firebase/firestore';\nimport 'firebase/auth';\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore } from 'firebase/firestore';\nimport { GoogleAuthProvider } from 'firebase/auth';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDIpusDV406YiRd020VCM-KSLUi7f8LTbI',\n  authDomain: 'react-app-1cf19.firebaseapp.com',\n  projectId: 'react-app-1cf19',\n  storageBucket: 'react-app-1cf19.appspot.com',\n  messagingSenderId: '499686534377',\n  appId: '1:499686534377:web:5cc977b7d0100f4a27d478',\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\nconst db = getFirestore();\n\nconst googleAuthProvider = new GoogleAuthProvider();\n\nexport { app, db, googleAuthProvider };\n","export const types = {\n  login: '[auth] login',\n  logout: '[auth] logout',\n  uiSetError: '[UI] Set Error',\n  uiRemoveError: '[UI] Remove Error',\n  uiStartLoading: '[UI] Start loading',\n  uiFinishLoading: '[UI] Finish loading',\n  errRegister: '[auth] error',\n};\n","import { types } from '../types/types';\n\nexport const setError = (msg) => {\n  return { type: types.uiSetError, payload: msg };\n};\n\nexport const removeError = () => {\n  return { type: types.uiRemoveError };\n};\n\nexport const startLoading = () => {\n  return { type: types.uiStartLoading, payload: true };\n};\nexport const finishLoading = () => {\n  return { type: types.uiFinishLoading, payload: false };\n};\n","import {\n  getAuth,\n  signInWithPopup,\n  createUserWithEmailAndPassword,\n  updateProfile,\n  signInWithEmailAndPassword,\n  signOut,\n} from 'firebase/auth';\nimport { googleAuthProvider } from '../firebase/config';\nimport { types } from '../types/types';\nimport { finishLoading, startLoading } from './ui';\nimport Swal from 'sweetalert2';\nimport 'sweetalert2/src/sweetalert2.scss';\n\nexport const startLoginEmailPassword = (email, password) => {\n  return (dispatch) => {\n    dispatch(startLoading());\n\n    const auth = getAuth();\n\n    signInWithEmailAndPassword(auth, email, password)\n      .then(({ user }) => {\n        dispatch(login(user.uid, user.displayName));\n        dispatch(finishLoading());\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch({ type: types.errRegister, payload: err });\n        dispatch(finishLoading());\n        Swal.fire('Error', err.message, 'error');\n      });\n  };\n};\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\n  return (dispatch) => {\n    const auth = getAuth();\n    createUserWithEmailAndPassword(auth, email, password)\n      .then(async ({ user }) => {\n        await updateProfile(user, { displayName: name });\n        dispatch(login(user.uid, user.displayName));\n      })\n      .catch((err) => {\n        dispatch({ type: types.errRegister, payload: err });\n        Swal.fire('Error', err.message, 'error');\n      });\n  };\n};\nexport const startGoogleLogin = () => {\n  return (dispatch) => {\n    const auth = getAuth();\n    signInWithPopup(auth, googleAuthProvider).then(({ user }) => {\n      dispatch(login(user.uid, user.displayName));\n    });\n  };\n};\nexport const login = (uid, displayName) => ({\n  type: types.login,\n  payload: { uid, displayName },\n});\nexport const startLogout = () => {\n  return async (dispatch) => {\n    await signOut(getAuth());\n    dispatch(logout());\n  };\n};\nexport const logout = () => ({ type: types.logout });\n","const JournalEntry = () => {\n  return (\n    <div className=\"journal__entry\">\n      <div\n        className=\"journal__entry-picture\"\n        style={{\n          backgroundSize: 'cover',\n          backgroundImage:\n            'url(https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg)',\n        }}\n      ></div>\n      <div className=\"journal__entry-body\">\n        <p className=\"journal__entry-title\">Un nuevo dia</p>\n        <p className=\"journal__entry-content\">\n          Lorem ipsum dolor sit, amet consectetur adipisicing elit.\n        </p>\n      </div>\n      <div className=\"journal__entry-date-box\">\n        <span>Monday</span>\n        <h4>28</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default JournalEntry;\n","import JournalEntry from './JournalEntry';\n\nconst JournalEntries = () => {\n  const entries = [1, 2, 3, 4, 5];\n  return (\n    <div className=\"journal__entries\">\n      {entries.map((entry) => (\n        <JournalEntry key={entry} />\n      ))}\n    </div>\n  );\n};\n\nexport default JournalEntries;\n","import { useDispatch } from 'react-redux';\nimport JournalEntries from './JournalEntries';\nimport { startLogout } from '../actions/auth';\n\nconst SideBar = () => {\n  const dispatch = useDispatch();\n\n  const handleLogout = () => {\n    dispatch(startLogout());\n  };\n\n  return (\n    <aside className=\"journal__sidebar\">\n      <div className=\"journal__sidebar-navbar\">\n        <h3 className=\"mt-5\">\n          <i className=\"far fa-moon\"></i>\n          <span>Edwin</span>\n        </h3>\n        <button className=\"btn\" onClick={handleLogout}>\n          Logout\n        </button>\n      </div>\n\n      <div className=\"journal__entri\">\n        <i className=\"far fa-calendar-plus fa-5x\"></i>\n\n        <p className=\"mt-5\">New Entry</p>\n      </div>\n      <JournalEntries />\n    </aside>\n  );\n};\n\nexport default SideBar;\n","const NotesAppBar = () => {\n  return (\n    <div className=\"notes__app-bar\">\n      <span>28 de Agosto 2021</span>\n      <div>\n        <button className=\"btn\">Picture</button>\n        <button className=\"btn\">Save</button>\n      </div>\n    </div>\n  );\n};\n\nexport default NotesAppBar;\n","import NotesAppBar from './NotesAppBar';\n\nconst NoteScreen = () => {\n  return (\n    <div className=\"note__main-context\">\n      <NotesAppBar />\n      <div className=\"notes__content\">\n        <input\n          type=\"text\"\n          placeholder=\"Some Awesome Title\"\n          className=\"notes__title-input\"\n          autoComplete=\"off\"\n        />\n        <textarea\n          placeholder=\"What happened today\"\n          className=\"notes__text-area\"\n        ></textarea>\n\n        <div className=\"notes__image\">\n          <img\n            src=\"https://cdn.pixabay.com/photo/2017/12/15/13/51/polynesia-3021072__340.jpg\"\n            alt=\"Playa\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NoteScreen;\n","import NothingSeleceted from './NothingSeleceted';\nimport SideBar from './SideBar';\nimport NoteScreen from './NoteScreen';\nconst JournalScreen = () => {\n  return (\n    <div className=\"journal__main-context\">\n      <SideBar />\n\n      <main>\n        {/* <NothingSeleceted /> */}\n        <NoteScreen />\n      </main>\n    </div>\n  );\n};\n\nexport default JournalScreen;\n","import { Redirect, Route } from 'react-router';\nimport PropTypes from 'prop-types';\n\nconst PrivateRoute = ({ isAuth, component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        isAuth ? <Component {...props} /> : <Redirect to=\"/auth/login\" />\n      }\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n\nexport default PrivateRoute;\n","import { Redirect, Route } from 'react-router';\nimport PropTypes from 'prop-types';\n\nconst PublicRoute = ({ isAuth, component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        !isAuth ? <Component {...props} /> : <Redirect to=\"/\" />\n      }\n    />\n  );\n};\n\nPublicRoute.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n\nexport default PublicRoute;\n","import { useState } from 'react';\n\nexport const useForm = (initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n  const reset = () => {\n    setValues(initialState);\n  };\n  const handleChange = ({ target }) => {\n    setValues({ ...values, [target.name]: target.value });\n  };\n\n  return [values, handleChange, reset];\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\n\nconst LoginScreen = () => {\n  const dispatch = useDispatch();\n  const { loading } = useSelector((state) => state.ui);\n\n  const {\n    err: { code },\n  } = useSelector((state) => state.auth);\n  const [values, handleChange] = useForm({\n    email: '',\n    password: '',\n  });\n  const { email, password } = values;\n\n  const handleLogin = (event) => {\n    event.preventDefault();\n    dispatch(startLoginEmailPassword(email, password));\n  };\n  const handleGoogleLogin = () => {\n    dispatch(startGoogleLogin());\n  };\n  return (\n    <>\n      <h3 className=\"auth__title\">Login</h3>\n      <form onSubmit={handleLogin}>\n        {code && <div className=\"auth__alert-error\">{code}</div>}\n        <input\n          autoComplete=\"off\"\n          className=\"auth__input\"\n          type=\"text\"\n          placeholder=\"Email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n        />\n        <input\n          className=\"auth__input\"\n          type=\"password\"\n          placeholder=\"Password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n        />\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary btn-block\"\n          disabled={loading}\n        >\n          Log In\n        </button>\n        <hr />\n        <div className=\"auth__social-network\">\n          <p>Login with social networks</p>\n          <div className=\"google-btn\" onClick={handleGoogleLogin}>\n            <div className=\"google-icon-wrapper\">\n              <img\n                className=\"google-icon\"\n                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\n                alt=\"google button\"\n              />\n            </div>\n            <p className=\"btn-text\">\n              <b>Sign in with google</b>\n            </p>\n          </div>\n        </div>\n        <Link to=\"/auth/register\" className=\"link\">\n          Create new account\n        </Link>\n      </form>\n    </>\n  );\n};\n\nexport default LoginScreen;\n","import { Link } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport validator from 'validator';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeError, setError } from '../../actions/ui';\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\nconst RegisterScreen = () => {\n  /* Redux - Hooks */\n  /* useDispatch para dispara la action */\n  const dispatch = useDispatch();\n  /* useSelector para seleccionar mis states del store */\n  const { msgError } = useSelector((state) => state.ui);\n  /* ----------------------------------------------------- */\n  const [values, handleChange] = useForm({\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n  });\n  const { name, email, password, password2 } = values;\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n    if (isFormValue()) {\n      dispatch(startRegisterWithEmailPasswordName(email, password, name));\n    }\n  };\n\n  const isFormValue = () => {\n    if (name.trim().length === 0) {\n      dispatch(setError('Name vacio'));\n      return false;\n    } else if (!validator.isEmail(email)) {\n      dispatch(setError('Email incorrecto'));\n      return false;\n    } else if (password !== password2 && password.length < 6) {\n      dispatch(setError('Password no coindicen'));\n      return false;\n    }\n    dispatch(removeError());\n    return true;\n  };\n  return (\n    <>\n      <h3 className=\"auth__title\">Register</h3>\n      <form onSubmit={handleRegister}>\n        {msgError && <div className=\"auth__alert-error\">{msgError}</div>}\n        <input\n          autoComplete=\"off\"\n          className=\"auth__input\"\n          type=\"text\"\n          placeholder=\"Name\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n        />\n        <input\n          autoComplete=\"off\"\n          className=\"auth__input\"\n          type=\"text\"\n          placeholder=\"Email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n        />\n        <input\n          className=\"auth__input\"\n          type=\"password\"\n          placeholder=\"Password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n        />\n        <input\n          className=\"auth__input\"\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n          name=\"password2\"\n          value={password2}\n          onChange={handleChange}\n        />\n        <button type=\"submit\" className=\"btn btn-primary btn-block mb-5\">\n          <b>Register</b>\n        </button>\n        <hr />\n        <Link to=\"/auth/login\" className=\"link\">\n          Already resgistered? Log In\n        </Link>\n      </form>\n    </>\n  );\n};\n\nexport default RegisterScreen;\n","import { Redirect, Route, Switch } from 'react-router';\nimport LoginScreen from '../components/auth/LoginScreen';\nimport RegisterScreen from '../components/auth/RegisterScreen';\n\nconst AuthRouter = () => {\n  return (\n    <div className=\"auth__main\">\n      <div className=\"auth__box-container\">\n        <Switch>\n          <Route exact path=\"/auth/login\" component={LoginScreen} />\n          <Route exact path=\"/auth/register\" component={RegisterScreen} />\n          <Redirect to=\"/auth/login\" />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthRouter;\n","import { getAuth, onAuthStateChanged } from '@firebase/auth';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { HashRouter, Switch, Redirect } from 'react-router-dom';\nimport { login } from '../actions/auth';\nimport JournalScreen from '../components/JournalScreen';\nimport PrivateRoute from '../components/PrivateRoute';\nimport PublicRoute from '../components/PublicRoute';\nimport AuthRouter from './AuthRouter';\n\nconst AppRouter = () => {\n  const dispatch = useDispatch();\n  const [checking, setChecking] = useState(true);\n  const [isLoggedIn, setIsLogggedIn] = useState(false);\n\n  useEffect(() => {\n    const auth = getAuth();\n    onAuthStateChanged(auth, (user) => {\n      if (user?.uid) {\n        dispatch(login(user.uid, user.displayName));\n        setIsLogggedIn(true);\n      } else {\n        setIsLogggedIn(false);\n      }\n      setChecking(false);\n    });\n  }, [dispatch]);\n\n  if (checking) {\n    return <h1>Espere...</h1>;\n  }\n  return (\n    <HashRouter basename=\"/\">\n      <div>\n        <Switch>\n          <PublicRoute\n            isAuth={isLoggedIn}\n            path=\"/auth\"\n            component={AuthRouter}\n          />\n          <PrivateRoute\n            isAuth={isLoggedIn}\n            exact\n            path=\"/\"\n            component={JournalScreen}\n          />\n          <Redirect to=\"/auth/login\" />\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default AppRouter;\n","import { types } from '../types/types';\n\nconst initialState = { loading: false, msgError: null };\n\nexport const registerReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.uiSetError:\n      return { ...state, msgError: action.payload };\n\n    case types.uiRemoveError:\n      return { ...state, msgError: null };\n\n    case types.uiStartLoading:\n      return { ...state, loading: action.payload };\n\n    case types.uiFinishLoading:\n      return { ...state, loading: action.payload };\n\n    default:\n      return state;\n  }\n};\n","import thunk from 'redux-thunk';\nimport { createStore, combineReducers, compose, applyMiddleware } from 'redux';\nimport { authReducer } from '../reducers/auth.reducer';\nimport { registerReducer } from '../reducers/register.reducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst composeEnhancers =\n  (typeof window !== 'undefined' && composeWithDevTools) || compose;\n\nconst reducers = combineReducers({ auth: authReducer, ui: registerReducer });\n\nexport const store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import { types } from '../types/types';\n\nexport const authReducer = (state = { err: { code: null } }, action) => {\n  switch (action.type) {\n    case types.login:\n      return {\n        ...state,\n        uid: action.payload.uid,\n        name: action.payload.displayName,\n      };\n    case types.logout:\n      return { err: { code: null } };\n    case types.errRegister:\n      return { ...state, err: action.payload };\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport AppRouter from './routers/AppRouter';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nconst JournalApp = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n};\n\nexport default JournalApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport JournalApp from './JournalApp';\nimport './index.scss';\n\nReactDOM.render(<JournalApp />, document.getElementById('root'));\n"],"sourceRoot":""}